{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Math",
				"Mathf.PI	[property]"
			],
			[
				"BuildLevel",
				"BuildLevelTexture"
			],
			[
				"AplyTex",
				"ApplyTextureLayer"
			],
			[
				"leve",
				"levelWidth"
			],
			[
				"resolu",
				"resolution	[class]"
			],
			[
				"SetPix",
				"SetPixels	Cubemap.*(colors, face, miplevel)"
			],
			[
				"dungeonT",
				"dungeonTilesetFlipped"
			],
			[
				"res",
				"resources	[class]"
			],
			[
				"resol",
				"resolution	LightmapEditorSettings.*"
			],
			[
				"GetCompon",
				"GetComponent	type"
			],
			[
				"Game",
				"GameObject	*()"
			],
			[
				"numRow",
				"numTilesPerRow"
			],
			[
				"se",
				"see	See documentation tag"
			],
			[
				"Dispose",
				"DisposePathMarkers"
			],
			[
				"just",
				"justOrdered"
			],
			[
				"deltaTim",
				"deltaTime	Time.*"
			],
			[
				"pivo",
				"pivot	PivotMode.*"
			],
			[
				"dungeon",
				"dungeonMap"
			],
			[
				"Gauss",
				"Gaussian"
			],
			[
				"LogError",
				"LogError	Debug.*(message)"
			],
			[
				"Err",
				"Error	LogType.*"
			],
			[
				"stairs",
				"stairsLoop"
			],
			[
				"SetSee",
				"SetSeed"
			],
			[
				"ata",
				"aTC_RGBA8	TextureImporterFormat.*"
			],
			[
				"Cle",
				"Clear	Array.*()"
			],
			[
				"NPC",
				"NPCController"
			],
			[
				"map",
				"mapString"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "using UnityEngine;\nusing System.Collections.Generic;\n\npublic class GameView : MonoBehaviour \n{\n    #region Delegates & Events\n    public delegate void ProcessTurn();\n    public static event ProcessTurn processTurn;\n    #endregion\n\n\n	#region Variables\n	public float cycleRate = 0.5f;\n	private float nextCycle = 0.0f;\n\n	public int levelWidth = 128;\n	public int levelHeight = 128;\n    public int rooms;\n\n	public float tileSize = 1.0f;\n	public int tileResolution = 16;\n\n	public Texture2D dungeonTileset;\n\n	public static byte[,] dungeonMap; \n	public static List<Vector2> viableLocations = new List<Vector2>();\n	public NPCController npcController;\n	public ItemController itemController;\n\n	public Player player;\n	public int currentLevel = 1;\n\n    private DungeonVariables variables;\n    public Texture2D levelTexture;\n    public Color[][] spriteSheet;\n    \n    public static int numRows;\n    public static int numTilesPerRow;\n    //private byte[,] data;\n\n	#endregion\n\n	// Use this for initialization\n	void Awake () \n	{\n		double lastTime = System.DateTime.Now.ToFileTime();\n        GameObject dv = GameObject.Find(\"DungeonVariables\");\n        if(dv != null) variables = dv.GetComponent<DungeonVariables>();\n\n        if (variables != null) \n        { \n            Debug.Log(\"Dungeon Variables found\");\n            if (variables.size == 1)\n            {\n                levelWidth = 32;\n                levelHeight = 32;\n            } \n            else if(variables.size == 2)\n            {\n                levelWidth = 64;\n                levelHeight = 64;\n\n            }\n\n            else if(variables.size == 3)\n            {\n                levelWidth = 128;\n                levelHeight = 128;\n            }\n        }\n        else //handling so far only includes using the standard variables\n        {\n        }\n\n		int texWidth = levelWidth * tileResolution;\n		int texHeight = levelHeight * tileResolution;\n		levelTexture = new Texture2D(texWidth, texHeight);\n\n		// Build mesh and move to correct view point.\n		buildMesh(this.gameObject, levelWidth, levelHeight, tileSize);\n		transform.position = new Vector3(transform.position.x, transform.position.y + levelHeight, transform.position.z);\n\n		// Generate dungeon map and apply textue.\n		dungeonMap = new byte[levelWidth, levelHeight];\n		spriteSheet = ChopUpTiles(dungeonTileset, tileResolution);\n		BuildLevel(levelWidth, levelHeight, tileResolution);\n    \n		SpawnPlayer();\n		SpawnEntities();\n\n		/*ConvertToString cTS = new ConvertToString();\n		Debug.Log(cTS.Covert(NPCController.npcMap, levelWidth, levelHeight));\n		Debug.Log(cTS.Covert(ItemController.itemMap, levelWidth, levelHeight));*/\n		Debug.Log(\"Loading time: \" + (System.DateTime.Now.ToFileTime() - lastTime)/10000D + \" ms.\");\n	}\n\n	private void buildMesh(GameObject gObject, int width, int height, float tileSize) \n	{\n		\n		int numTiles = width * height;\n		int numTris = numTiles * 2;\n		\n		int vwidth = width + 1;\n		int vheight = height + 1;\n		int numVerts = vwidth * vheight;\n		\n		//generate the mesh data\n		Vector3[] vertices = new Vector3[numVerts];\n        Vector3[] normals = new Vector3[numVerts];\n		Vector2[] uv = new Vector2[numVerts];\n		\n		int[] triangles = new int[numTris * 3];\n		\n		int x, y;\n		for (y = 0; y < vheight; y++) {\n			for (x = 0; x < vwidth; x++) {\n				vertices[y * vwidth + x] = new Vector3(x*tileSize,-y*tileSize,0);	\n				normals[y * vwidth + x] = new Vector3(0,0,-1);\n				uv[y * vwidth + x] = new Vector2((float)x / width, 1f-(float)y / height);\n			}\n		}\n		\n		for (y = 0; y < height; y++) {\n			for (x = 0; x < width; x++) {\n				int squareIndex = y * width + x;\n				int triOffset = squareIndex * 6;\n				\n				triangles[triOffset + 0] = y * vwidth + x + 0;\n				triangles[triOffset + 2] = y * vwidth + x + vwidth + 0;\n				triangles[triOffset + 1] = y * vwidth + x + vwidth + 1;\n				\n				triangles[triOffset + 3] = y * vwidth + x + 0;\n				triangles[triOffset + 5] = y * vwidth + x + vwidth + 1;\n				triangles[triOffset + 4] = y * vwidth + x + 1;\n			}\n		}\n		\n		//Create a new Mesh and populate with the data\n		Mesh mesh = new Mesh ();\n		mesh.vertices = vertices;\n		mesh.triangles = triangles;\n		mesh.normals = normals;\n		mesh.uv = uv;\n		\n		//Assign our mesh to our filter/renderer/collider\n		MeshFilter mesh_filter = gObject.GetComponent<MeshFilter> ();\n		//MeshRenderer mesh_renderer = GetComponent<MeshRenderer>();\n		MeshCollider mesh_collider = gObject.GetComponent<MeshCollider>();\n		\n		mesh_filter.mesh = mesh;\n		mesh_collider.sharedMesh = mesh;\n	}\n\n	private void BuildLevel(int width, int height, float tileResolution) {\n        \n        /*TDMap map;\n        if(variables != null) map = new TDMap(width, height, rooms, variables.type);\n        else map = new TDMap(width, height, rooms);*/     	\n\n        int depth = 2;\n       	byte[][,] map = LevelGenerator.CreateAndValidateUndergroundMap(width, height, depth);\n       	dungeonMap = map[0];\n\n		\n		BuildLevelTexture();	\n	}\n\n	public Color[][] ChopUpTiles(Texture2D tileTexture, int tileResolution){\n		numTilesPerRow = tileTexture.width / tileResolution;\n		numRows = tileTexture.height / tileResolution;\n		\n		Color[][] tiles = new Color[numTilesPerRow*numRows][];\n		\n		for(int y = 0; y < numRows; y++) {\n			for(int x = 0; x < numTilesPerRow; x++) {\n				tiles[y * numTilesPerRow + x] = tileTexture.GetPixels(x * tileResolution, y * tileResolution, tileResolution, tileResolution);\n			}	\n		}\n		\n		return tiles;\n	}\n\n    public void NextCycle()\n    {\n        nextCycle = Time.time + cycleRate;\n        processTurn();\n    }\n\n    public float GetNextCycle()\n    {\n        return nextCycle;\n    }\n\n    public bool IsNextCycle(){\n    	return Time.time > nextCycle;\n    }\n\n    public Tile GetTileSprite(int id){\n    	return Tile.tiles[(byte)id];\n    }\n\n    public byte GetTile(int x, int y) {\n    	if(x < 0 || x >= levelWidth) return 255;\n    	if(y < 0 || y >= levelHeight) return 255;\n    	return dungeonMap[x,y];\n    }\n\n\n    public void ApplyTextureLayer(byte[] IDs, bool ignore) {\n    	for(int y = levelHeight-1; y >= 0; y--) {\n			 for(int x = levelWidth-1; x >= 0; x--) {\n				bool flagContinue = false;\n				for(int i = 0; i < IDs.Length; i++) {\n					if(ignore) {\n						if(IDs[i] == dungeonMap[x,y]) {\n							flagContinue = true;\n							break;\n						}\n					} else {\n						flagContinue = true;\n						if(IDs[i] == dungeonMap[x,y]) {							\n							flagContinue = false;\n							break;\n						} \n					}\n				}\n				if(flagContinue) continue;\n				Tile.tiles[dungeonMap[x,y]].RenderTile(x,y);\n			}	\n		}\n    }\n\n   	//requires the x and y position, the texture to draw on, the sprite in form of an array to draw and the\n   	//respective tile resolution. The function can be 'misused' by painting single pixels, but it's meant\n   	//to draw whole sprites.\n    public void DrawOnTexture(int x, int y, Texture2D texture, Color[] sprite, int tileResolution){\n    	for(int yy = y, _y = 0; yy < y + tileResolution; yy++, _y++) {\n    		for(int xx = x, _x = 0; xx < x + tileResolution; xx++, _x++) {\n    			Color c = sprite[_x+_y*tileResolution];\n    			if(c.a == 0) continue;	\n    			texture.SetPixel(xx, yy, c); 			\n    		}		   		\n    	}\n    }\n\n\n\n    //The zero layer just fills everything with dirt, so transparent pixels don't show the game background\n    //This is also the layer that fills up the actual dungeon map array\n    public void FillTextureWithTile(byte id){\n    	for(int y = levelHeight-1; y >= 0; y--) {\n			for(int x = levelWidth-1; x >= 0; x--) {\n				Tile.tiles[id].RenderTile(x,y);\n			}	\n		}\n    }\n\n    public void FinalizeLevelTexture(Texture2D texture) {\n    	texture.filterMode = FilterMode.Point;\n		texture.wrapMode = TextureWrapMode.Repeat;\n		texture.Apply();\n		\n		MeshRenderer mesh_renderer = GetComponent<MeshRenderer>();\n		mesh_renderer.sharedMaterials[0].mainTexture = texture;\n    }\n\n    public void BuildLevelTexture() {\n    	FillTextureWithTile(Tile.dirt.id);\n\n    	byte[] apl1 = {Tile.rock.id, Tile.dirt.id, Tile.ironOre.id, Tile.stairsDown.id};\n		ApplyTextureLayer(apl1, true);\n		byte[] apl2 = {Tile.rock.id, Tile.stairsDown.id};\n		ApplyTextureLayer(apl2, false);\n		byte[] apl3 = {Tile.ironOre.id};\n		ApplyTextureLayer(apl3, false);\n\n		FinalizeLevelTexture(levelTexture);\n\n		for(int y = 0; y < levelHeight; y++) {\n			for(int x = 0; x < levelWidth; x++) {\n				if(Tile.tiles[dungeonMap[x,y]].walkable) {\n					viableLocations.Add(new Vector2(x,y));\n				}\n			}\n		}\n    }\n\n    public void SpawnPlayer() {\n    	// Initialise the player and generate list of viable position on the map.\n		for(int y = 0; y < levelHeight; y++) {\n			for(int x = 0; x < levelWidth; x++) {\n				if(Tile.tiles[dungeonMap[x,y]].walkable){\n					player.setPositionDirectly(x, y);\n				}\n			}\n		}\n    }\n\n    public void SpawnEntities() {\n    	// Initialise Controllers\n		npcController.populateEnemies(viableLocations, currentLevel, levelWidth, levelHeight);\n		itemController.populateItems(viableLocations, levelWidth, levelHeight);\n    }\n}\n",
			"file": "Assets/Scripts/Level/GameView.cs",
			"file_size": 8945,
			"file_write_time": 130546773608785567,
			"settings":
			{
				"buffer_size": 8887,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Level/DungeonVariables.cs",
			"settings":
			{
				"buffer_size": 209,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Controllers/NPCController.cs",
			"settings":
			{
				"buffer_size": 1055,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Controllers/ItemController.cs",
			"settings":
			{
				"buffer_size": 1500,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Level/LevelGen/LevelGenerator.cs",
			"settings":
			{
				"buffer_size": 5279,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Entities/Actors/Player.cs",
			"settings":
			{
				"buffer_size": 5922,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Level/Tile/Tile.cs",
			"settings":
			{
				"buffer_size": 989,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Level/Tile/Dirt.cs",
			"settings":
			{
				"buffer_size": 270,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Level/Tile/StairsDown.cs",
			"settings":
			{
				"buffer_size": 282,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Level/Tile/Water.cs",
			"settings":
			{
				"buffer_size": 1516,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/javac-cmd.sublime-build",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"paca",
				"Package Control: Add Repository"
			],
			[
				"paclage",
				"Package Control: Install Package"
			]
		],
		"width": 1031.0
	},
	"console":
	{
		"height": 159.0,
		"history":
		[
			"javac -help",
			"javac help",
			"Install Package Javatar",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/AI",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Controllers",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Items",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Interface",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/LevelGen",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Other",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Other/Math"
	],
	"file_history":
	[
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/AI/PathFinder.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/Rock.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/StairsDown.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/Water.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/DamageText.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Other/Math/Gaussian.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Controllers/NPCController.cs",
		"/C/Users/Marc/AppData/Roaming/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/IronOre.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors/Player.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/TileMarker.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/Lava.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/Dirt.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/Tile.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/LevelGen/LevelGenerator.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Controllers/InputHandler.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors/Actor.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/PlayerGUI.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors/Enemy.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/GameView.cs",
		"/C/Users/Marc/workspace/Unity/Polandcrawl/Assets/Scripts/Level/LevelGen/TDMap.cs",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors/Player.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Controllers/NPCController.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Level/GameView.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/TileMarker.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/AI/PathFinder.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Other/Math/Gaussian.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Level/Tile/StairsDown.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/level/levelgen/LevelGen.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/level/tile/Tile.java",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/DamageText.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Blabla/src/de/cirrus/blah/Game.java",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/pcrawl_sublime.sublime-project",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/User/ApplySyntax.sublime-settings",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Interface/PlayerGUI.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Entities/Actors/Actor.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Controllers/ConvertToString.cs",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Polandcrawl - Kopie.sln",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Polandcrawl.sublime-project",
		"/C/Users/Acer Aspire 6935G/workspace/Unity/Polandcrawl/Assets/Scripts/Polandcrawl.sublime-project",
		"/C/Users/Acer Aspire 6935G/Downloads/astar/a star pathfinder v. 1.92/Visual C++ Version/Demo 2 - Maze/aStarLibrary.h",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/crafting/ResourceRecipe.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/screen/InstructionsMenu.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/crafting/Recipe.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/entity/Anvil.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/screen/AboutMenu.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/screen/ListItem.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/InputHandler.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/entity/ItemEntity.java",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/Javatar/Default (Windows).sublime-keymap",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/Javatar/Javatar.sublime-settings",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/Javatar/Java/Proto.javatar-packages",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/res/playerhurt.wav",
		"/C/Users/Acer Aspire 6935G/workspace/Java/sublime/javatarTest/src/MainTest.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/sublime/javatarTest/src/TestMain.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/sublime/javatarTest/src/TestMain/java.java",
		"/C/Users/Acer Aspire 6935G/workspace/Java/sublime/javatarTest/src/TestMain/TestMain.java",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/Javatar/README.md",
		"/C/Users/Acer Aspire 6935G/workspace/Java/eclipse/Minicraft/src/com/mojang/ld22/Game.sublime-project",
		"/C/Users/Acer Aspire 6935G/workspace/Java/sublime/HW/de/cirrus/hworld/HelloWorld.java",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/User/javac-cmd.sublime-build",
		"/C/Dev/runJava.bat",
		"/C/Users/Acer Aspire 6935G/AppData/Roaming/Sublime Text 3/Packages/User/Java.sublime-settings"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"spriteSheet",
			"id",
			"6",
			"stairs",
			"AbortWalking",
			"Time.time > view.GetNextCycle()",
			"LevelGen",
			"Math",
			"Gaussian.NextFloat()",
			"tile",
			"[][]",
			"save",
			"abs",
			"pastPathing",
			"nextInt",
			"random",
			"LevelGen",
			"nextFloat",
			"random",
			"setSample",
			"sample"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"spriteSheetFlipped",
			"StopWalking",
			"view.IsNextCycle()",
			"LevelGenerator",
			"Mathf",
			"System.Math.NextFloat()",
			"Math.NextFloat()",
			"Abs",
			"postExpansion",
			"NextInt",
			"Gaussian",
			"LevelGenerator",
			"NextFloat",
			"Gaussian",
			"SetSample",
			"Sample"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/Level/GameView.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8887,
						"regions":
						{
						},
						"selection":
						[
							[
								6366,
								6366
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"spell_check": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2551.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/Level/DungeonVariables.cs",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 209,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/Controllers/NPCController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1055,
						"regions":
						{
						},
						"selection":
						[
							[
								385,
								385
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Scripts/Controllers/ItemController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1500,
						"regions":
						{
						},
						"selection":
						[
							[
								332,
								332
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/Scripts/Level/LevelGen/LevelGenerator.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5279,
						"regions":
						{
						},
						"selection":
						[
							[
								2240,
								2240
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2061.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/Scripts/Entities/Actors/Player.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5922,
						"regions":
						{
						},
						"selection":
						[
							[
								401,
								401
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/Scripts/Level/Tile/Tile.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 989,
						"regions":
						{
						},
						"selection":
						[
							[
								449,
								449
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Assets/Scripts/Level/Tile/Dirt.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 270,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Assets/Scripts/Level/Tile/StairsDown.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 282,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Assets/Scripts/Level/Tile/Water.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1516,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"output.exec":
	{
		"height": 121.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "pcrawl_sublime.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"rockt",
				"src\\com\\mojang\\ld22\\level\\tile\\RockTile.java"
			],
			[
				"l",
				"src\\com\\mojang\\ld22\\entity\\Lantern.java"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 218.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
